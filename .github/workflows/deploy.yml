name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev
      - main

jobs:
  # ðŸ§ª Job 1: Dev branch test with docker-compose.dev.yml
  test-dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build & Run with docker-compose.dev.yml
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_DEV }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
        run: |
          echo "NEON_API_KEY=${{ secrets.NEON_API_KEY }}" >> .env.development.local
          echo "NEON_PROJECT_ID=${{ secrets.NEON_PROJECT_ID }}" >> .env.development.local
          echo "PARENT_BRANCH_ID=${{ secrets.PARENT_BRANCH_ID }}" >> .env.development.local
          echo "DATABASE_URL=${DATABASE_URL}" >> .env.development.local
          echo "SESSION_SECRET=${SESSION_SECRET}" >> .env.development.local

          docker-compose -f docker-compose.dev.yml --env-file .env.development.local up -d --build
          docker-compose -f docker-compose.dev.yml ps
          docker-compose -f docker-compose.dev.yml logs --tail=50

      - name: Run tests
        run: |
          npm install
          npm test

      - name: Shutdown services
        if: always()
        run: docker-compose -f docker-compose.dev.yml down


  # ðŸš€ Job 2: Main branch deploy to Cloud Run
  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Build Docker image
        run: |
          docker build -t asia-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-app/flask-app:latest .

      - name: Push Docker image to Artifact Registry
        run: |
          gcloud auth configure-docker asia-east1-docker.pkg.dev
          docker push asia-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-app/flask-app:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy my-app \
            --image=asia-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-app/flask-app:latest \
            --region=asia-east1 \
            --platform=managed \
            --allow-unauthenticated \
            --set-env-vars SESSION_SECRET=${{ secrets.SESSION_SECRET }},DATABASE_URL=${{ secrets.DATABASE_URL_PROD }}
